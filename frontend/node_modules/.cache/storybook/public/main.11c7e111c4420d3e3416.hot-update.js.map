{"version":3,"file":"main.11c7e111c4420d3e3416.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;AAEA;AAAA;;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AADA;AAGA;AACA;AACA;AAFA;AANA;AAWA;AAAA;AAXA;AAgBA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAJA;AAOA;AAAA;AAEA;AAAA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAVA;AADA;AApBA;AADA;AA4CA;AAlDA","sources":["webpack://default/./components/organisms/Hero/Component.tsx"],"sourcesContent":["import React from 'react'\nimport gridStyle from '@components/atoms/Grid/styles.module.css'\nimport style from './styles.module.css'\nimport clsx from 'clsx'\nimport { Lines, SkewBlock } from '@components/atoms/Graphic/Component'\nimport { Button, PossibleTypes } from '@components/atoms/Button/Component'\nimport { ButtonFragment, HeroFragment } from '@generated/graphql-request'\nimport { PossibleColors } from '@components/molecules/BlockMapper/Component'\nimport BlockContent from '@sanity/block-content-to-react'\nimport { hasValue } from '@misc/helpers'\nimport { LazyMotion, domAnimation, m } from 'framer-motion'\n\nexport default function Hero (props: HeroFragment & { color: PossibleColors }): JSX.Element {\n  const titleObject = props.title?.split(props.coloredPart ?? '') ?? [props.title]\n\n  console.log(props);\n  \n  return (\n    <LazyMotion features={domAnimation}>\n      <div className={style.hero}>\n        <div className={style.lines}>\n          <Lines />\n        </div>\n        <m.div\n          className={style.heroSkew}\n          initial={{ scaleY: '0', y: 1 }}\n          animate={{\n            scaleY: '100%', y: 1\n          }}\n          transition={{\n            duration: 0.3,\n            ease: 'easeOut'\n          }}\n        >\n          <div>\n            <SkewBlock />\n          </div>\n        </m.div>\n\n        <div className={clsx(gridStyle.grid, style.grid)}>\n          <div className={style.heroWrapper}>\n            <h1>\n              {titleObject[0]}\n              <span className={clsx(props.color === 'pink' && 'span-pink')}>{props.coloredPart}</span>\n              {titleObject[1]}\n              <span className={clsx(props.color === 'pink' && 'span-pink')}>.</span>\n            </h1>\n\n            <BlockContent blocks={props.descriptionRaw} />\n\n            <div className={style.heroButtons}>\n              {hasValue(props.buttons) && props.buttons?.map((button: ButtonFragment | null) => {\n                if (!hasValue(button)) return null\n                return (<Button key={button._key} as='link' href={button.path ?? '/'} color={button.buttonType as PossibleTypes}>{button.label}</Button>)\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </LazyMotion>\n  )\n}\n"],"names":[],"sourceRoot":""}