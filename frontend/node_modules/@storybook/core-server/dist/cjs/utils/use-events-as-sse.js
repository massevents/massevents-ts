"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useEventsAsSSE = useEventsAsSSE;
var PING_INTERVAL = 1000;
var PING = 'PING';

function useEventsAsSSE(emitter, events) {
  return function (req, res) {
    if (req.headers.accept !== 'text/event-stream') {
      return false;
    }

    var closed = false;

    function sendEvent(event, data) {
      if (closed || res.writableEnded) return;

      if (data) {
        res.write(`event:${event}\ndata:${JSON.stringify(data)}\n\n`);
      } else {
        res.write(`event:${event}\ndata:\n\n`);
      }

      res.flush();
    }

    var watchers = events.reduce(function (acc, event) {
      acc[event] = function (data) {
        return sendEvent(event, data);
      };

      return acc;
    }, {});
    var interval;

    var close = function () {
      events.forEach(function (eventName) {
        emitter.off(eventName, watchers[eventName]);
      });
      clearTimeout(interval);
      closed = true;
      res.end();
    };

    res.on('close', close);
    if (closed || res.writableEnded) return true;
    res.setHeader('Cache-Control', 'no-cache');
    res.setHeader('Content-Type', 'text/event-stream');
    res.setHeader('Connection', 'keep-alive');
    res.flushHeaders();
    events.forEach(function (eventName) {
      emitter.on(eventName, watchers[eventName]);
    }); // Send a PING event every 1s to avoid Chrome timing out the request

    var ping = function () {
      return sendEvent(PING);
    };

    interval = setInterval(ping, PING_INTERVAL);
    return true;
  };
}