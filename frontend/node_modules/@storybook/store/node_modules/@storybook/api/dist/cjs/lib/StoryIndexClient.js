"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StoryIndexClient = void 0;

require("regenerator-runtime/runtime.js");

require("core-js/modules/es.promise.js");

require("core-js/modules/es.object.to-string.js");

var _global = _interopRequireDefault(require("global"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var window = _global.default.window,
    _fetch = _global.default.fetch,
    CONFIG_TYPE = _global.default.CONFIG_TYPE;
var PATH = './stories.json'; // The stories.json endpoint both serves the basic data on a `GET` request and a stream of
// invalidation events when called as a `event-stream` (i.e. via SSE).

var StoryIndexClient = /*#__PURE__*/function () {
  function StoryIndexClient() {
    _classCallCheck(this, StoryIndexClient);

    this.source = void 0;

    if (CONFIG_TYPE === 'DEVELOPMENT') {
      this.source = new window.EventSource(PATH);
    }
  } // Silently never emit events in built storybook modes


  _createClass(StoryIndexClient, [{
    key: "addEventListener",
    value: function addEventListener(event, cb) {
      if (this.source) this.source.addEventListener(event, cb);
    }
  }, {
    key: "fetch",
    value: function () {
      var _fetch2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var result;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _fetch(PATH);

              case 2:
                result = _context.sent;

                if (!(result.status === 200)) {
                  _context.next = 5;
                  break;
                }

                return _context.abrupt("return", result.json());

              case 5:
                _context.t0 = Error;
                _context.next = 8;
                return result.text();

              case 8:
                _context.t1 = _context.sent;
                throw new _context.t0(_context.t1);

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function fetch() {
        return _fetch2.apply(this, arguments);
      }

      return fetch;
    }()
  }]);

  return StoryIndexClient;
}();

exports.StoryIndexClient = StoryIndexClient;