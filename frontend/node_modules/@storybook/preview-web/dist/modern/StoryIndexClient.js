// NOTE that this file is duplicated in lib/api
// We aren't currently sure what the long term future the SSE approach is and there's no
// obvious common place to put it right now.
import global from 'global';
const {
  window,
  fetch,
  CONFIG_TYPE
} = global;
const PATH = './stories.json'; // The stories.json endpoint both serves the basic data on a `GET` request and a stream of
// invalidation events when called as a `event-stream` (i.e. via SSE).

export class StoryIndexClient {
  constructor() {
    this.source = void 0;

    if (CONFIG_TYPE === 'DEVELOPMENT') {
      this.source = new window.EventSource(PATH);
    }
  } // Silently never emit events in bult storybook modes


  addEventListener(event, cb) {
    if (this.source) this.source.addEventListener(event, cb);
  }

  async fetch() {
    const result = await fetch(PATH);
    if (result.status === 200) return result.json();
    throw new Error(await result.text());
  }

}